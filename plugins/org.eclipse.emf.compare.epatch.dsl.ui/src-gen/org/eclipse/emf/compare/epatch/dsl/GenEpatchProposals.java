/*
 * generated by Xtext
 */
package org.eclipse.emf.compare.epatch.dsl;

import java.util.Collections;
import java.util.List;

import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.common.editor.contentassist.impl.AbstractJavaProposalProvider;
import org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider;
import org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistContext;

/**
 * Represents a generated, default implementation of interface {@link IProposalProvider}.
 * 
 * @see org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider
 */
public class GenEpatchProposals extends AbstractJavaProposalProvider {
	// TODO remove this from template
	private static final String UI_PLUGIN_ID = "ERROR_REMOVE_ME_FROM_TEMPLATE";

	@Override
	protected String getPluginId() {
		return UI_PLUGIN_ID;
	}

	public List<? extends ICompletionProposal> completeEpatch_Name(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeEpatch_Name feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "Epatch_Name",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeEpatch_Imports(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeEpatch_Imports feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeEpatch_Resources(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeEpatch_Resources feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeEpatch_Objects(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeEpatch_Objects feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeResourceImport_Name(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeResourceImport_Name feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "ResourceImport_Name",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeResourceImport_Uri(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeResourceImport_Uri feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "\"ResourceImport_Uri\"",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeEPackageImport_Name(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeEPackageImport_Name feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "EPackageImport_Name",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeEPackageImport_NsURI(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeEPackageImport_NsURI feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "\"EPackageImport_NsURI\"",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeJavaImport_Path(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeJavaImport_Path feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "JavaImport_Path",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeExtensionImport_Path(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeExtensionImport_Path feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "ExtensionImport_Path",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeNamedResource_Name(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeNamedResource_Name feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "NamedResource_Name",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeNamedResource_LeftUri(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeNamedResource_LeftUri feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "\"NamedResource_LeftUri\"",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeNamedResource_LeftRoot(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeNamedResource_LeftRoot feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeNamedResource_RightUri(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeNamedResource_RightUri feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "\"NamedResource_RightUri\"",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeNamedResource_RightRoot(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeNamedResource_RightRoot feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeObjectRef_Name(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectRef_Name feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "ObjectRef_Name",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeObjectRef_LeftRes(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectRef_LeftRes feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeObjectRef_LeftFrag(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectRef_LeftFrag feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeObjectRef_RightRes(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectRef_RightRes feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeObjectRef_RightFrag(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectRef_RightFrag feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeObjectRef_Assignments(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectRef_Assignments feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeBiSingleAssignment_Feature(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeBiSingleAssignment_Feature feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "BiSingleAssignment_Feature",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeBiSingleAssignment_LeftValue(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeBiSingleAssignment_LeftValue feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeBiSingleAssignment_RightValue(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeBiSingleAssignment_RightValue feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeBiListAssignment_Feature(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeBiListAssignment_Feature feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "BiListAssignment_Feature",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeBiListAssignment_LeftValues(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeBiListAssignment_LeftValues feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeBiListAssignment_RightValues(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeBiListAssignment_RightValues feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeMonoSingleAssignment_Feature(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeMonoSingleAssignment_Feature feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "MonoSingleAssignment_Feature",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeMonoSingleAssignment_LeftValue(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeMonoSingleAssignment_LeftValue feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeMonoListAssignment_Feature(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeMonoListAssignment_Feature feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "MonoListAssignment_Feature",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeMonoListAssignment_LeftValues(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeMonoListAssignment_LeftValues feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeAssignmentValue_Value(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeAssignmentValue_Value feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "\"AssignmentValue_Value\"",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeAssignmentValue_RefObject(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeAssignmentValue_RefObject feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeAssignmentValue_RefFeature(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeAssignmentValue_RefFeature feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "AssignmentValue_RefFeature",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeAssignmentValue_RefIndex(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeAssignmentValue_RefIndex feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "1", contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeAssignmentValue_NewObject(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeAssignmentValue_NewObject feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeAssignmentValue_Import(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeAssignmentValue_Import feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeAssignmentValue_ImpFrag(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeAssignmentValue_ImpFrag feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeListAssignmentValue_Index(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeListAssignmentValue_Index feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "1", contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeListAssignmentValue_RefIndex(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeListAssignmentValue_RefIndex feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "1", contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeListAssignmentValue_Value(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeListAssignmentValue_Value feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment,
				"\"ListAssignmentValue_Value\"", contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeListAssignmentValue_RefObject(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeListAssignmentValue_RefObject feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeListAssignmentValue_RefFeature(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeListAssignmentValue_RefFeature feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment,
				"ListAssignmentValue_RefFeature", contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeListAssignmentValue_NewObject(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeListAssignmentValue_NewObject feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeListAssignmentValue_Import(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeListAssignmentValue_Import feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeListAssignmentValue_ImpFrag(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeListAssignmentValue_ImpFrag feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeSingleAssignmentValue_Keyword(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeSingleAssignmentValue_Keyword feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeSingleAssignmentValue_Value(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeSingleAssignmentValue_Value feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment,
				"\"SingleAssignmentValue_Value\"", contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeSingleAssignmentValue_RefObject(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeSingleAssignmentValue_RefObject feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeSingleAssignmentValue_RefFeature(
			Assignment assignment, IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeSingleAssignmentValue_RefFeature feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment,
				"SingleAssignmentValue_RefFeature", contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeSingleAssignmentValue_RefIndex(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeSingleAssignmentValue_RefIndex feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "1", contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeSingleAssignmentValue_NewObject(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeSingleAssignmentValue_NewObject feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeSingleAssignmentValue_Import(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeSingleAssignmentValue_Import feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeSingleAssignmentValue_ImpFrag(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeSingleAssignmentValue_ImpFrag feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeObjectNew_Import(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectNew_Import feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeObjectNew_ImpFrag(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectNew_ImpFrag feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeObjectNew_Name(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectNew_Name feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "ObjectNew_Name",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeObjectNew_Assignments(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectNew_Assignments feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeObjectCopy_Resource(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectCopy_Resource feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return lookupCrossReference(((CrossReference)assignment.getTerminal()), contentAssistContext);
	}

	public List<? extends ICompletionProposal> completeObjectCopy_Fragment(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectCopy_Fragment feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> completeObjectCopy_Name(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectCopy_Name feature '" + assignment.getFeature() + "' terminal '"
					+ assignment.getTerminal() + "' cardinality '" + assignment.getCardinality()
					+ "' and prefix '" + contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.singletonList(createCompletionProposal(assignment, "ObjectCopy_Name",
				contentAssistContext));
	}

	public List<? extends ICompletionProposal> completeObjectCopy_Assignments(Assignment assignment,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("completeObjectCopy_Assignments feature '" + assignment.getFeature()
					+ "' terminal '" + assignment.getTerminal() + "' cardinality '"
					+ assignment.getCardinality() + "' and prefix '"
					+ contentAssistContext.getMatchString().trim() + "'");
		}
		return Collections.emptyList();
	}

	public List<? extends ICompletionProposal> complete(RuleCall ruleCall,
			IContentAssistContext contentAssistContext) {
		if (logger.isDebugEnabled()) {
			logger.debug("complete '" + ruleCall.getRule().getName() + "' cardinality '"
					+ ruleCall.getCardinality() + "' for model '" + contentAssistContext.getModel()
					+ "' and prefix '" + contentAssistContext.getMatchString() + "'");
		}
		return Collections.emptyList();
	}

	@Override
	protected String getDefaultImageFilePath() {
		return "icons/editor.gif";
	}

}
