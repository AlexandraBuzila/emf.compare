/*
* generated by Xtext
*/
package org.eclipse.emf.compare.epatch.dsl.parser.packrat.consumers;

import org.eclipse.xtext.parser.packrat.consumers.ITerminalConsumerConfiguration;
import org.eclipse.xtext.parser.packrat.consumers.AbstractRuleAwareTerminalConsumer;
import org.eclipse.xtext.parser.packrat.consumers.ConsumeResult;


public final class EpatchFRAGMENTConsumer extends AbstractRuleAwareTerminalConsumer {

	public EpatchFRAGMENTConsumer(ITerminalConsumerConfiguration configuration) {
		super(configuration);
	}
	
	@Override
	protected int doConsume() {
		return consumeGroup$1() ? ConsumeResult.SUCCESS : ConsumeResult.EMPTY_MATCH;
	}

	protected boolean consumeGroup$1() {
		final int marker = mark();
		if (!consumeKeyword$2()) {
			rollbackTo(marker);
			return false;
		}
		if (!consumeAlternatives$3()) {
			rollbackTo(marker);
			return false;
		}
		return true;
	}

	protected boolean consumeKeyword$2() {
		return readChar('#');
	}

	protected boolean consumeAlternatives$3() {
		if (doConsumeAlternatives$3()) {
			while(doConsumeAlternatives$3()) {}
			return true;
		}
		return false;
	}

	protected boolean doConsumeAlternatives$3() {
		if (consumeCharacterRange$4())
			return true;
		if (consumeCharacterRange$7())
			return true;
		if (consumeCharacterRange$10())
			return true;
		if (consumeKeyword$13())
			return true;
		if (consumeKeyword$14())
			return true;
		if (consumeKeyword$15())
			return true;
		if (consumeKeyword$16())
			return true;
		if (consumeKeyword$17())
			return true;
		if (consumeKeyword$18())
			return true;
		if (consumeKeyword$19())
			return true;
		if (consumeKeyword$20())
			return true;
		if (consumeKeyword$21())
			return true;
		if (consumeKeyword$22())
			return true;
		return false;
	}

	protected boolean consumeCharacterRange$4() {
		return readCharBetween('a', 'z');
	}

	protected boolean consumeCharacterRange$7() {
		return readCharBetween('A', 'Z');
	}

	protected boolean consumeCharacterRange$10() {
		return readCharBetween('0', '9');
	}

	protected boolean consumeKeyword$13() {
		return readChar('_');
	}

	protected boolean consumeKeyword$14() {
		return readChar('/');
	}

	protected boolean consumeKeyword$15() {
		return readChar('[');
	}

	protected boolean consumeKeyword$16() {
		return readChar(']');
	}

	protected boolean consumeKeyword$17() {
		return readChar('{');
	}

	protected boolean consumeKeyword$18() {
		return readChar('}');
	}

	protected boolean consumeKeyword$19() {
		return readChar('.');
	}

	protected boolean consumeKeyword$20() {
		return readChar('@');
	}

	protected boolean consumeKeyword$21() {
		return readChar('%');
	}

	protected boolean consumeKeyword$22() {
		return readChar(':');
	}
	
}
