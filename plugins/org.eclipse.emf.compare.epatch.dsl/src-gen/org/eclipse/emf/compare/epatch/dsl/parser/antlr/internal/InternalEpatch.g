/*
* generated by Xtext
*/
grammar InternalEpatch;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.eclipse.emf.compare.epatch.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.emf.compare.epatch.dsl.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.emf.compare.epatch.dsl.services.EpatchGrammarAccess;

}

@parser::members {
 
 	private EpatchGrammarAccess grammarAccess;
 	
    public InternalEpatchParser(TokenStream input, IAstFactory factory, EpatchGrammarAccess grammarAccess) {
        super(input, factory, grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/eclipse/emf/compare/epatch/dsl/parser/antlr/internal/InternalEpatch.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Epatch";	
   	} 
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleEpatch
entryRuleEpatch returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getEpatchRule(), currentNode); }
	 iv_ruleEpatch=ruleEpatch 
	 { $current=$iv_ruleEpatch.current; } 
	 EOF 
;

// Rule Epatch
ruleEpatch returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('epatch' 
    {
        createLeafNode(grammarAccess.getEpatchAccess().getEpatchKeyword_0(), null); 
    }
(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getEpatchAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEpatchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.getEpatchAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getEpatchAccess().getImportsImportParserRuleCall_3_0(), currentNode); 
	    }
	    lv_imports_3=ruleImport 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEpatchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "imports", lv_imports_3, "Import", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getEpatchAccess().getResourcesNamedResourceParserRuleCall_4_0(), currentNode); 
	    }
	    lv_resources_4=ruleNamedResource 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEpatchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "resources", lv_resources_4, "NamedResource", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getEpatchAccess().getObjectsObjectRefParserRuleCall_5_0(), currentNode); 
	    }
	    lv_objects_5=ruleObjectRef 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEpatchRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "objects", lv_objects_5, "ObjectRef", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getEpatchAccess().getRightCurlyBracketKeyword_6(), null); 
    }
);





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getImportRule(), currentNode); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getImportAccess().getModelImportParserRuleCall_0(), currentNode); 
    }
    this_ModelImport_0=ruleModelImport
    { 
        $current = $this_ModelImport_0.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.getImportAccess().getModelImportParserRuleCall_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getImportAccess().getJavaImportParserRuleCall_1(), currentNode); 
    }
    this_JavaImport_1=ruleJavaImport
    { 
        $current = $this_JavaImport_1.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.getImportAccess().getJavaImportParserRuleCall_1(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getImportAccess().getExtensionImportParserRuleCall_2(), currentNode); 
    }
    this_ExtensionImport_2=ruleExtensionImport
    { 
        $current = $this_ExtensionImport_2.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.getImportAccess().getExtensionImportParserRuleCall_2(), null); 
    }
);





// Entry rule entryRuleModelImport
entryRuleModelImport returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getModelImportRule(), currentNode); }
	 iv_ruleModelImport=ruleModelImport 
	 { $current=$iv_ruleModelImport.current; } 
	 EOF 
;

// Rule ModelImport
ruleModelImport returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getModelImportAccess().getResourceImportParserRuleCall_0(), currentNode); 
    }
    this_ResourceImport_0=ruleResourceImport
    { 
        $current = $this_ResourceImport_0.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.getModelImportAccess().getResourceImportParserRuleCall_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelImportAccess().getEPackageImportParserRuleCall_1(), currentNode); 
    }
    this_EPackageImport_1=ruleEPackageImport
    { 
        $current = $this_EPackageImport_1.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.getModelImportAccess().getEPackageImportParserRuleCall_1(), null); 
    }
);





// Entry rule entryRuleResourceImport
entryRuleResourceImport returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getResourceImportRule(), currentNode); }
	 iv_ruleResourceImport=ruleResourceImport 
	 { $current=$iv_ruleResourceImport.current; } 
	 EOF 
;

// Rule ResourceImport
ruleResourceImport returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('import' 
    {
        createLeafNode(grammarAccess.getResourceImportAccess().getImportKeyword_0(), null); 
    }
(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getResourceImportAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'uri' 
    {
        createLeafNode(grammarAccess.getResourceImportAccess().getUriKeyword_2(), null); 
    }
(	
	
	    lv_uri_3=	RULE_STRING
	{
		createLeafNode(grammarAccess.getResourceImportAccess().getUriSTRINGTerminalRuleCall_3_0(), "uri"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uri", lv_uri_3, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
));





// Entry rule entryRuleEPackageImport
entryRuleEPackageImport returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getEPackageImportRule(), currentNode); }
	 iv_ruleEPackageImport=ruleEPackageImport 
	 { $current=$iv_ruleEPackageImport.current; } 
	 EOF 
;

// Rule EPackageImport
ruleEPackageImport returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('import' 
    {
        createLeafNode(grammarAccess.getEPackageImportAccess().getImportKeyword_0(), null); 
    }
(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getEPackageImportAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEPackageImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'ns' 
    {
        createLeafNode(grammarAccess.getEPackageImportAccess().getNsKeyword_2(), null); 
    }
(	
	
	    lv_nsURI_3=	RULE_STRING
	{
		createLeafNode(grammarAccess.getEPackageImportAccess().getNsURISTRINGTerminalRuleCall_3_0(), "nsURI"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getEPackageImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "nsURI", lv_nsURI_3, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
));





// Entry rule entryRuleJavaImport
entryRuleJavaImport returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getJavaImportRule(), currentNode); }
	 iv_ruleJavaImport=ruleJavaImport 
	 { $current=$iv_ruleJavaImport.current; } 
	 EOF 
;

// Rule JavaImport
ruleJavaImport returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('import' 
    {
        createLeafNode(grammarAccess.getJavaImportAccess().getImportKeyword_0(), null); 
    }
'java' 
    {
        createLeafNode(grammarAccess.getJavaImportAccess().getJavaKeyword_1(), null); 
    }
(	
	
	    lv_path_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getJavaImportAccess().getPathIDTerminalRuleCall_2_0(), "path"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getJavaImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "path", lv_path_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('.' 
    {
        createLeafNode(grammarAccess.getJavaImportAccess().getFullStopKeyword_3_0(), null); 
    }
(	
	
	    lv_path_4=	RULE_ID
	{
		createLeafNode(grammarAccess.getJavaImportAccess().getPathIDTerminalRuleCall_3_1_0(), "path"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getJavaImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "path", lv_path_4, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))*);





// Entry rule entryRuleExtensionImport
entryRuleExtensionImport returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getExtensionImportRule(), currentNode); }
	 iv_ruleExtensionImport=ruleExtensionImport 
	 { $current=$iv_ruleExtensionImport.current; } 
	 EOF 
;

// Rule ExtensionImport
ruleExtensionImport returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('import' 
    {
        createLeafNode(grammarAccess.getExtensionImportAccess().getImportKeyword_0(), null); 
    }
'extension' 
    {
        createLeafNode(grammarAccess.getExtensionImportAccess().getExtensionKeyword_1(), null); 
    }
(	
	
	    lv_path_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getExtensionImportAccess().getPathIDTerminalRuleCall_2_0(), "path"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExtensionImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "path", lv_path_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('::' 
    {
        createLeafNode(grammarAccess.getExtensionImportAccess().getColonColonKeyword_3_0(), null); 
    }
(	
	
	    lv_path_4=	RULE_ID
	{
		createLeafNode(grammarAccess.getExtensionImportAccess().getPathIDTerminalRuleCall_3_1_0(), "path"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExtensionImportRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "path", lv_path_4, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))*);





// Entry rule entryRuleNamedResource
entryRuleNamedResource returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getNamedResourceRule(), currentNode); }
	 iv_ruleNamedResource=ruleNamedResource 
	 { $current=$iv_ruleNamedResource.current; } 
	 EOF 
;

// Rule NamedResource
ruleNamedResource returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('resource' 
    {
        createLeafNode(grammarAccess.getNamedResourceAccess().getResourceKeyword_0(), null); 
    }
(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getNamedResourceAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedResourceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.getNamedResourceAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
'left' 
    {
        createLeafNode(grammarAccess.getNamedResourceAccess().getLeftKeyword_3(), null); 
    }
(('uri' 
    {
        createLeafNode(grammarAccess.getNamedResourceAccess().getUriKeyword_4_0_0(), null); 
    }
(	
	
	    lv_leftUri_5=	RULE_STRING
	{
		createLeafNode(grammarAccess.getNamedResourceAccess().getLeftUriSTRINGTerminalRuleCall_4_0_1_0(), "leftUri"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedResourceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "leftUri", lv_leftUri_5, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getNamedResourceAccess().getLeftRootCreatedObjectParserRuleCall_4_1_0(), currentNode); 
	    }
	    lv_leftRoot_6=ruleCreatedObject 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedResourceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "leftRoot", lv_leftRoot_6, "CreatedObject", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))';' 
    {
        createLeafNode(grammarAccess.getNamedResourceAccess().getSemicolonKeyword_5(), null); 
    }
'right' 
    {
        createLeafNode(grammarAccess.getNamedResourceAccess().getRightKeyword_6(), null); 
    }
(('uri' 
    {
        createLeafNode(grammarAccess.getNamedResourceAccess().getUriKeyword_7_0_0(), null); 
    }
(	
	
	    lv_rightUri_10=	RULE_STRING
	{
		createLeafNode(grammarAccess.getNamedResourceAccess().getRightUriSTRINGTerminalRuleCall_7_0_1_0(), "rightUri"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedResourceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "rightUri", lv_rightUri_10, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getNamedResourceAccess().getRightRootCreatedObjectParserRuleCall_7_1_0(), currentNode); 
	    }
	    lv_rightRoot_11=ruleCreatedObject 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedResourceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "rightRoot", lv_rightRoot_11, "CreatedObject", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))';' 
    {
        createLeafNode(grammarAccess.getNamedResourceAccess().getSemicolonKeyword_8(), null); 
    }
'}' 
    {
        createLeafNode(grammarAccess.getNamedResourceAccess().getRightCurlyBracketKeyword_9(), null); 
    }
);







// Entry rule entryRuleObjectRef
entryRuleObjectRef returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getObjectRefRule(), currentNode); }
	 iv_ruleObjectRef=ruleObjectRef 
	 { $current=$iv_ruleObjectRef.current; } 
	 EOF 
;

// Rule ObjectRef
ruleObjectRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('object' 
    {
        createLeafNode(grammarAccess.getObjectRefAccess().getObjectKeyword_0(), null); 
    }
(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectRefAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?(((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectRefAccess().getLeftResNamedResourceCrossReference_2_0_0_0(), "leftRes"); 
	}

		// TODO assign feature to currentNode
	
)(	
	
	    lv_leftFrag_3=	RULE_FRAGMENT
	{
		createLeafNode(grammarAccess.getObjectRefAccess().getLeftFragFRAGMENTTerminalRuleCall_2_0_1_0(), "leftFrag"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "leftFrag", lv_leftFrag_3, "FRAGMENT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))
    |('left' 
    {
        createLeafNode(grammarAccess.getObjectRefAccess().getLeftKeyword_2_1_0(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectRefAccess().getLeftResNamedResourceCrossReference_2_1_1_0(), "leftRes"); 
	}

		// TODO assign feature to currentNode
	
)(	
	
	    lv_leftFrag_6=	RULE_FRAGMENT
	{
		createLeafNode(grammarAccess.getObjectRefAccess().getLeftFragFRAGMENTTerminalRuleCall_2_1_2_0(), "leftFrag"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "leftFrag", lv_leftFrag_6, "FRAGMENT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'right' 
    {
        createLeafNode(grammarAccess.getObjectRefAccess().getRightKeyword_2_1_3(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectRefAccess().getRightResNamedResourceCrossReference_2_1_4_0(), "rightRes"); 
	}

		// TODO assign feature to currentNode
	
)(	
	
	    lv_rightFrag_9=	RULE_FRAGMENT
	{
		createLeafNode(grammarAccess.getObjectRefAccess().getRightFragFRAGMENTTerminalRuleCall_2_1_5_0(), "rightFrag"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "rightFrag", lv_rightFrag_9, "FRAGMENT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)))('{' 
    {
        createLeafNode(grammarAccess.getObjectRefAccess().getLeftCurlyBracketKeyword_3_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getObjectRefAccess().getAssignmentsBiSingleAssignmentParserRuleCall_3_1_0_0(), currentNode); 
	    }
	    lv_assignments_11=ruleBiSingleAssignment 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "assignments", lv_assignments_11, "BiSingleAssignment", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getObjectRefAccess().getAssignmentsBiListAssignmentParserRuleCall_3_1_1_0(), currentNode); 
	    }
	    lv_assignments_12=ruleBiListAssignment 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "assignments", lv_assignments_12, "BiListAssignment", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.getObjectRefAccess().getRightCurlyBracketKeyword_3_2(), null); 
    }
)?);





// Entry rule entryRuleCreatedObject
entryRuleCreatedObject returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCreatedObjectRule(), currentNode); }
	 iv_ruleCreatedObject=ruleCreatedObject 
	 { $current=$iv_ruleCreatedObject.current; } 
	 EOF 
;

// Rule CreatedObject
ruleCreatedObject returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getCreatedObjectAccess().getObjectNewParserRuleCall_0(), currentNode); 
    }
    this_ObjectNew_0=ruleObjectNew
    { 
        $current = $this_ObjectNew_0.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.getCreatedObjectAccess().getObjectNewParserRuleCall_0(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCreatedObjectAccess().getObjectCopyParserRuleCall_1(), currentNode); 
    }
    this_ObjectCopy_1=ruleObjectCopy
    { 
        $current = $this_ObjectCopy_1.current; 
        currentNode = currentNode.getParent();
    }

    { 
    createLeafNode(grammarAccess.getCreatedObjectAccess().getObjectCopyParserRuleCall_1(), null); 
    }
);







// Entry rule entryRuleBiSingleAssignment
entryRuleBiSingleAssignment returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getBiSingleAssignmentRule(), currentNode); }
	 iv_ruleBiSingleAssignment=ruleBiSingleAssignment 
	 { $current=$iv_ruleBiSingleAssignment.current; } 
	 EOF 
;

// Rule BiSingleAssignment
ruleBiSingleAssignment returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_feature_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getBiSingleAssignmentAccess().getFeatureIDTerminalRuleCall_0_0(), "feature"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBiSingleAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "feature", lv_feature_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getBiSingleAssignmentAccess().getEqualsSignKeyword_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getBiSingleAssignmentAccess().getLeftValueSingleAssignmentValueParserRuleCall_2_0(), currentNode); 
	    }
	    lv_leftValue_2=ruleSingleAssignmentValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBiSingleAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "leftValue", lv_leftValue_2, "SingleAssignmentValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'|' 
    {
        createLeafNode(grammarAccess.getBiSingleAssignmentAccess().getVerticalLineKeyword_3(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getBiSingleAssignmentAccess().getRightValueSingleAssignmentValueParserRuleCall_4_0(), currentNode); 
	    }
	    lv_rightValue_4=ruleSingleAssignmentValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBiSingleAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "rightValue", lv_rightValue_4, "SingleAssignmentValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getBiSingleAssignmentAccess().getSemicolonKeyword_5(), null); 
    }
);





// Entry rule entryRuleBiListAssignment
entryRuleBiListAssignment returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getBiListAssignmentRule(), currentNode); }
	 iv_ruleBiListAssignment=ruleBiListAssignment 
	 { $current=$iv_ruleBiListAssignment.current; } 
	 EOF 
;

// Rule BiListAssignment
ruleBiListAssignment returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_feature_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getBiListAssignmentAccess().getFeatureIDTerminalRuleCall_0_0(), "feature"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBiListAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "feature", lv_feature_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getBiListAssignmentAccess().getEqualsSignKeyword_1(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getBiListAssignmentAccess().getLeftSquareBracketKeyword_2(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getBiListAssignmentAccess().getLeftValuesListAssignmentValueParserRuleCall_3_0_0(), currentNode); 
	    }
	    lv_leftValues_3=ruleListAssignmentValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBiListAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "leftValues", lv_leftValues_3, "ListAssignmentValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getBiListAssignmentAccess().getCommaKeyword_3_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getBiListAssignmentAccess().getLeftValuesListAssignmentValueParserRuleCall_3_1_1_0(), currentNode); 
	    }
	    lv_leftValues_5=ruleListAssignmentValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBiListAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "leftValues", lv_leftValues_5, "ListAssignmentValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*)?'|' 
    {
        createLeafNode(grammarAccess.getBiListAssignmentAccess().getVerticalLineKeyword_4(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getBiListAssignmentAccess().getRightValuesListAssignmentValueParserRuleCall_5_0_0(), currentNode); 
	    }
	    lv_rightValues_7=ruleListAssignmentValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBiListAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "rightValues", lv_rightValues_7, "ListAssignmentValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getBiListAssignmentAccess().getCommaKeyword_5_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getBiListAssignmentAccess().getRightValuesListAssignmentValueParserRuleCall_5_1_1_0(), currentNode); 
	    }
	    lv_rightValues_9=ruleListAssignmentValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getBiListAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "rightValues", lv_rightValues_9, "ListAssignmentValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*)?']' 
    {
        createLeafNode(grammarAccess.getBiListAssignmentAccess().getRightSquareBracketKeyword_6(), null); 
    }
';' 
    {
        createLeafNode(grammarAccess.getBiListAssignmentAccess().getSemicolonKeyword_7(), null); 
    }
);





// Entry rule entryRuleMonoSingleAssignment
entryRuleMonoSingleAssignment returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getMonoSingleAssignmentRule(), currentNode); }
	 iv_ruleMonoSingleAssignment=ruleMonoSingleAssignment 
	 { $current=$iv_ruleMonoSingleAssignment.current; } 
	 EOF 
;

// Rule MonoSingleAssignment
ruleMonoSingleAssignment returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_feature_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getMonoSingleAssignmentAccess().getFeatureIDTerminalRuleCall_0_0(), "feature"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonoSingleAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "feature", lv_feature_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getMonoSingleAssignmentAccess().getEqualsSignKeyword_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMonoSingleAssignmentAccess().getLeftValueSingleAssignmentValueParserRuleCall_2_0(), currentNode); 
	    }
	    lv_leftValue_2=ruleSingleAssignmentValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonoSingleAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "leftValue", lv_leftValue_2, "SingleAssignmentValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getMonoSingleAssignmentAccess().getSemicolonKeyword_3(), null); 
    }
);





// Entry rule entryRuleMonoListAssignment
entryRuleMonoListAssignment returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getMonoListAssignmentRule(), currentNode); }
	 iv_ruleMonoListAssignment=ruleMonoListAssignment 
	 { $current=$iv_ruleMonoListAssignment.current; } 
	 EOF 
;

// Rule MonoListAssignment
ruleMonoListAssignment returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_feature_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getMonoListAssignmentAccess().getFeatureIDTerminalRuleCall_0_0(), "feature"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonoListAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "feature", lv_feature_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getMonoListAssignmentAccess().getEqualsSignKeyword_1(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getMonoListAssignmentAccess().getLeftSquareBracketKeyword_2(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMonoListAssignmentAccess().getLeftValuesAssignmentValueParserRuleCall_3_0_0(), currentNode); 
	    }
	    lv_leftValues_3=ruleAssignmentValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonoListAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "leftValues", lv_leftValues_3, "AssignmentValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(',' 
    {
        createLeafNode(grammarAccess.getMonoListAssignmentAccess().getCommaKeyword_3_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMonoListAssignmentAccess().getLeftValuesAssignmentValueParserRuleCall_3_1_1_0(), currentNode); 
	    }
	    lv_leftValues_5=ruleAssignmentValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMonoListAssignmentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "leftValues", lv_leftValues_5, "AssignmentValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*)?']' 
    {
        createLeafNode(grammarAccess.getMonoListAssignmentAccess().getRightSquareBracketKeyword_4(), null); 
    }
';' 
    {
        createLeafNode(grammarAccess.getMonoListAssignmentAccess().getSemicolonKeyword_5(), null); 
    }
);





// Entry rule entryRuleAssignmentValue
entryRuleAssignmentValue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAssignmentValueRule(), currentNode); }
	 iv_ruleAssignmentValue=ruleAssignmentValue 
	 { $current=$iv_ruleAssignmentValue.current; } 
	 EOF 
;

// Rule AssignmentValue
ruleAssignmentValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_value_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getAssignmentValueAccess().getValueSTRINGTerminalRuleCall_0_0(), "value"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "value", lv_value_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getAssignmentValueAccess().getRefObjectNamedObjectCrossReference_1_0_0(), "refObject"); 
	}

		// TODO assign feature to currentNode
	
)('.' 
    {
        createLeafNode(grammarAccess.getAssignmentValueAccess().getFullStopKeyword_1_1_0(), null); 
    }
(	
	
	    lv_refFeature_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getAssignmentValueAccess().getRefFeatureIDTerminalRuleCall_1_1_1_0(), "refFeature"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "refFeature", lv_refFeature_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('[' 
    {
        createLeafNode(grammarAccess.getAssignmentValueAccess().getLeftSquareBracketKeyword_1_1_2_0(), null); 
    }
(	
	
	    lv_refIndex_5=	RULE_INT
	{
		createLeafNode(grammarAccess.getAssignmentValueAccess().getRefIndexINTTerminalRuleCall_1_1_2_1_0(), "refIndex"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "refIndex", lv_refIndex_5, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)']' 
    {
        createLeafNode(grammarAccess.getAssignmentValueAccess().getRightSquareBracketKeyword_1_1_2_2(), null); 
    }
)?)?)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAssignmentValueAccess().getNewObjectCreatedObjectParserRuleCall_2_0(), currentNode); 
	    }
	    lv_newObject_7=ruleCreatedObject 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "newObject", lv_newObject_7, "CreatedObject", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getAssignmentValueAccess().getImportImportCrossReference_3_0_0(), "import"); 
	}

		// TODO assign feature to currentNode
	
)(	
	
	    lv_impFrag_9=	RULE_FRAGMENT
	{
		createLeafNode(grammarAccess.getAssignmentValueAccess().getImpFragFRAGMENTTerminalRuleCall_3_1_0(), "impFrag"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "impFrag", lv_impFrag_9, "FRAGMENT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)));





// Entry rule entryRuleListAssignmentValue
entryRuleListAssignmentValue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getListAssignmentValueRule(), currentNode); }
	 iv_ruleListAssignmentValue=ruleListAssignmentValue 
	 { $current=$iv_ruleListAssignmentValue.current; } 
	 EOF 
;

// Rule ListAssignmentValue
ruleListAssignmentValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_index_0=	RULE_INT
	{
		createLeafNode(grammarAccess.getListAssignmentValueAccess().getIndexINTTerminalRuleCall_0_0(), "index"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "index", lv_index_0, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)':' 
    {
        createLeafNode(grammarAccess.getListAssignmentValueAccess().getColonKeyword_1(), null); 
    }
(('[' 
    {
        createLeafNode(grammarAccess.getListAssignmentValueAccess().getLeftSquareBracketKeyword_2_0_0(), null); 
    }
(	
	
	    lv_refIndex_3=	RULE_INT
	{
		createLeafNode(grammarAccess.getListAssignmentValueAccess().getRefIndexINTTerminalRuleCall_2_0_1_0(), "refIndex"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "refIndex", lv_refIndex_3, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)']' 
    {
        createLeafNode(grammarAccess.getListAssignmentValueAccess().getRightSquareBracketKeyword_2_0_2(), null); 
    }
)
    |(	
	
	    lv_value_5=	RULE_STRING
	{
		createLeafNode(grammarAccess.getListAssignmentValueAccess().getValueSTRINGTerminalRuleCall_2_1_0(), "value"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "value", lv_value_5, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getListAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getListAssignmentValueAccess().getRefObjectNamedObjectCrossReference_2_2_0_0(), "refObject"); 
	}

		// TODO assign feature to currentNode
	
)('.' 
    {
        createLeafNode(grammarAccess.getListAssignmentValueAccess().getFullStopKeyword_2_2_1_0(), null); 
    }
(	
	
	    lv_refFeature_8=	RULE_ID
	{
		createLeafNode(grammarAccess.getListAssignmentValueAccess().getRefFeatureIDTerminalRuleCall_2_2_1_1_0(), "refFeature"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "refFeature", lv_refFeature_8, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('[' 
    {
        createLeafNode(grammarAccess.getListAssignmentValueAccess().getLeftSquareBracketKeyword_2_2_1_2_0(), null); 
    }
(	
	
	    lv_refIndex_10=	RULE_INT
	{
		createLeafNode(grammarAccess.getListAssignmentValueAccess().getRefIndexINTTerminalRuleCall_2_2_1_2_1_0(), "refIndex"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "refIndex", lv_refIndex_10, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)']' 
    {
        createLeafNode(grammarAccess.getListAssignmentValueAccess().getRightSquareBracketKeyword_2_2_1_2_2(), null); 
    }
)?)?)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getListAssignmentValueAccess().getNewObjectCreatedObjectParserRuleCall_2_3_0(), currentNode); 
	    }
	    lv_newObject_12=ruleCreatedObject 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "newObject", lv_newObject_12, "CreatedObject", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getListAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getListAssignmentValueAccess().getImportImportCrossReference_2_4_0_0(), "import"); 
	}

		// TODO assign feature to currentNode
	
)(	
	
	    lv_impFrag_14=	RULE_FRAGMENT
	{
		createLeafNode(grammarAccess.getListAssignmentValueAccess().getImpFragFRAGMENTTerminalRuleCall_2_4_1_0(), "impFrag"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getListAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "impFrag", lv_impFrag_14, "FRAGMENT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))));





// Entry rule entryRuleSingleAssignmentValue
entryRuleSingleAssignmentValue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getSingleAssignmentValueRule(), currentNode); }
	 iv_ruleSingleAssignmentValue=ruleSingleAssignmentValue 
	 { $current=$iv_ruleSingleAssignmentValue.current; } 
	 EOF 
;

// Rule SingleAssignmentValue
ruleSingleAssignmentValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_keyword_0='null' 
    {
        createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getKeywordNullKeyword_0_0(), "keyword"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSingleAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "keyword", /* lv_keyword_0 */ input.LT(-1), "null", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |(	
	
	    lv_value_1=	RULE_STRING
	{
		createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getValueSTRINGTerminalRuleCall_1_0(), "value"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSingleAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "value", lv_value_1, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getSingleAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getRefObjectNamedObjectCrossReference_2_0_0(), "refObject"); 
	}

		// TODO assign feature to currentNode
	
)('.' 
    {
        createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getFullStopKeyword_2_1_0(), null); 
    }
(	
	
	    lv_refFeature_4=	RULE_ID
	{
		createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getRefFeatureIDTerminalRuleCall_2_1_1_0(), "refFeature"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSingleAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "refFeature", lv_refFeature_4, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('[' 
    {
        createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getLeftSquareBracketKeyword_2_1_2_0(), null); 
    }
(	
	
	    lv_refIndex_6=	RULE_INT
	{
		createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getRefIndexINTTerminalRuleCall_2_1_2_1_0(), "refIndex"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSingleAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "refIndex", lv_refIndex_6, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)']' 
    {
        createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getRightSquareBracketKeyword_2_1_2_2(), null); 
    }
)?)?)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getSingleAssignmentValueAccess().getNewObjectCreatedObjectParserRuleCall_3_0(), currentNode); 
	    }
	    lv_newObject_8=ruleCreatedObject 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSingleAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "newObject", lv_newObject_8, "CreatedObject", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |((	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getSingleAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getImportImportCrossReference_4_0_0(), "import"); 
	}

		// TODO assign feature to currentNode
	
)(	
	
	    lv_impFrag_10=	RULE_FRAGMENT
	{
		createLeafNode(grammarAccess.getSingleAssignmentValueAccess().getImpFragFRAGMENTTerminalRuleCall_4_1_0(), "impFrag"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSingleAssignmentValueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "impFrag", lv_impFrag_10, "FRAGMENT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)));





// Entry rule entryRuleObjectNew
entryRuleObjectNew returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getObjectNewRule(), currentNode); }
	 iv_ruleObjectNew=ruleObjectNew 
	 { $current=$iv_ruleObjectNew.current; } 
	 EOF 
;

// Rule ObjectNew
ruleObjectNew returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('new' 
    {
        createLeafNode(grammarAccess.getObjectNewAccess().getNewKeyword_0(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectNewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectNewAccess().getImportImportCrossReference_1_0(), "import"); 
	}

		// TODO assign feature to currentNode
	
)(	
	
	    lv_impFrag_2=	RULE_FRAGMENT
	{
		createLeafNode(grammarAccess.getObjectNewAccess().getImpFragFRAGMENTTerminalRuleCall_2_0(), "impFrag"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectNewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "impFrag", lv_impFrag_2, "FRAGMENT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectNewAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectNewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?('{' 
    {
        createLeafNode(grammarAccess.getObjectNewAccess().getLeftCurlyBracketKeyword_4_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getObjectNewAccess().getAssignmentsMonoSingleAssignmentParserRuleCall_4_1_0_0(), currentNode); 
	    }
	    lv_assignments_5=ruleMonoSingleAssignment 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectNewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "assignments", lv_assignments_5, "MonoSingleAssignment", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getObjectNewAccess().getAssignmentsMonoListAssignmentParserRuleCall_4_1_1_0(), currentNode); 
	    }
	    lv_assignments_6=ruleMonoListAssignment 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectNewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "assignments", lv_assignments_6, "MonoListAssignment", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.getObjectNewAccess().getRightCurlyBracketKeyword_4_2(), null); 
    }
)?);





// Entry rule entryRuleObjectCopy
entryRuleObjectCopy returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getObjectCopyRule(), currentNode); }
	 iv_ruleObjectCopy=ruleObjectCopy 
	 { $current=$iv_ruleObjectCopy.current; } 
	 EOF 
;

// Rule ObjectCopy
ruleObjectCopy returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('copy' 
    {
        createLeafNode(grammarAccess.getObjectCopyAccess().getCopyKeyword_0(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectCopyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectCopyAccess().getResourceNamedResourceCrossReference_1_0(), "resource"); 
	}

		// TODO assign feature to currentNode
	
)(	
	
	    lv_fragment_2=	RULE_FRAGMENT
	{
		createLeafNode(grammarAccess.getObjectCopyAccess().getFragmentFRAGMENTTerminalRuleCall_2_0(), "fragment"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectCopyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "fragment", lv_fragment_2, "FRAGMENT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getObjectCopyAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectCopyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?('{' 
    {
        createLeafNode(grammarAccess.getObjectCopyAccess().getLeftCurlyBracketKeyword_4_0(), null); 
    }
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getObjectCopyAccess().getAssignmentsMonoSingleAssignmentParserRuleCall_4_1_0_0(), currentNode); 
	    }
	    lv_assignments_5=ruleMonoSingleAssignment 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectCopyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "assignments", lv_assignments_5, "MonoSingleAssignment", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getObjectCopyAccess().getAssignmentsMonoListAssignmentParserRuleCall_4_1_1_0(), currentNode); 
	    }
	    lv_assignments_6=ruleMonoListAssignment 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getObjectCopyRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "assignments", lv_assignments_6, "MonoListAssignment", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))*'}' 
    {
        createLeafNode(grammarAccess.getObjectCopyAccess().getRightCurlyBracketKeyword_4_2(), null); 
    }
)?);




RULE_FRAGMENT : '#' ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'/'|'['|']'|'{'|'}'|'.'|'@'|'%'|':')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('\"' ('\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')|~(('\\'|'\"')))* '\"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


